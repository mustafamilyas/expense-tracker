# CI Pipeline for Expense Tracker
# - On main branch: Runs all tests and builds
# - On development branch: Runs tests only for affected applications
# - Uses PostgreSQL service for database tests

name: CI

on:
  push:
    branches: [main, development]
    paths:
      - '**/*.rs'
      - 'apps/web/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - 'apps/web/package.json'
      - 'apps/web/yarn.lock'
  pull_request:
    branches: [main, development]
    paths:
      - '**/*.rs'
      - 'apps/web/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - 'apps/web/package.json'
      - 'apps/web/yarn.lock'

jobs:
  # Job for main branch - runs all tests
  test-main:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          cache-dependency-path: 'apps/web/yarn.lock'

      - name: Install web dependencies
        working-directory: apps/web
        run: yarn install --frozen-lockfile

      - name: Run Rust checks
        run: |
          cargo check
          cargo clippy -- -D warnings

      - name: Install cargo-tarpaulin
        run: cargo install cargo-tarpaulin

      - name: Run Rust tests with coverage
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
        run: cargo tarpaulin --verbose --workspace --timeout 120 --out Lcov --output-dir coverage/rust

      - name: Upload Rust coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: coverage/rust/lcov.info
          flags: rust
          name: rust-coverage

      - name: Test and build web app
        working-directory: apps/web
        run: |
          yarn test:coverage
          yarn build

      - name: Upload web coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: apps/web/coverage/lcov.info
          flags: web
          name: web-coverage

  # Job for development branch - runs selective tests based on changes
  test-development:
    if: github.ref == 'refs/heads/development'
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Need previous commit for comparison

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          cache-dependency-path: 'apps/web/yarn.lock'

      - name: Install web dependencies
        working-directory: apps/web
        run: yarn install --frozen-lockfile

      # Check what files changed
      - name: Get changed files
        id: changed-files
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
            HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          else
            BASE_SHA="HEAD~1"
            HEAD_SHA="HEAD"
          fi

          # Check if Rust files changed
          if git diff --name-only $BASE_SHA $HEAD_SHA | grep -E '\.(rs|toml)$' | grep -v 'apps/web' > /dev/null; then
            echo "rust_changed=true" >> $GITHUB_OUTPUT
          else
            echo "rust_changed=false" >> $GITHUB_OUTPUT
          fi

          # Check if web files changed
          if git diff --name-only $BASE_SHA $HEAD_SHA | grep '^apps/web' > /dev/null; then
            echo "web_changed=true" >> $GITHUB_OUTPUT
          else
            echo "web_changed=false" >> $GITHUB_OUTPUT
          fi

      # Run Rust tests if Rust code changed
      - name: Run Rust checks and tests
        if: steps.changed-files.outputs.rust_changed == 'true'
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
        run: |
          cargo check
          cargo clippy -- -D warnings
          cargo test --verbose

      # Generate coverage if Rust code changed
      - name: Install cargo-tarpaulin (development)
        if: steps.changed-files.outputs.rust_changed == 'true'
        run: cargo install cargo-tarpaulin

      - name: Run Rust tests with coverage (development)
        if: steps.changed-files.outputs.rust_changed == 'true'
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
        run: cargo tarpaulin --verbose --workspace --timeout 120 --out Lcov --output-dir coverage/rust

      - name: Upload Rust coverage to Codecov (development)
        if: steps.changed-files.outputs.rust_changed == 'true'
        uses: codecov/codecov-action@v4
        with:
          file: coverage/rust/lcov.info
          flags: rust
          name: rust-coverage

      # Test and build web app if web code changed
      - name: Test and build web app
        if: steps.changed-files.outputs.web_changed == 'true'
        working-directory: apps/web
        run: |
          yarn test:coverage
          yarn build

      - name: Upload web coverage to Codecov (development)
        if: steps.changed-files.outputs.web_changed == 'true'
        uses: codecov/codecov-action@v4
        with:
          file: apps/web/coverage/lcov.info
          flags: web
          name: web-coverage

      # If no specific changes detected, run a basic check
      - name: Basic checks (no specific changes)
        if: steps.changed-files.outputs.rust_changed == 'false' && steps.changed-files.outputs.web_changed == 'false'
        run: |
          echo "No Rust or web changes detected, running basic checks..."
          cargo check
          cd apps/web && yarn install --frozen-lockfile